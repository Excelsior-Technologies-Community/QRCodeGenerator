// Generated by view binder compiler. Do not edit!
package com.ext.qrcodegenerator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ext.qrcodegenerator.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityQrgenerativeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnDownload;

  @NonNull
  public final Button btnGenerate;

  @NonNull
  public final Button btnSelectImage;

  @NonNull
  public final CardView cvQrCode;

  @NonNull
  public final TextInputEditText etInputText;

  @NonNull
  public final ImageView ivQrCode;

  @NonNull
  public final ImageView ivSelectedImage;

  @NonNull
  public final LinearLayout main;

  private ActivityQrgenerativeBinding(@NonNull LinearLayout rootView, @NonNull Button btnDownload,
      @NonNull Button btnGenerate, @NonNull Button btnSelectImage, @NonNull CardView cvQrCode,
      @NonNull TextInputEditText etInputText, @NonNull ImageView ivQrCode,
      @NonNull ImageView ivSelectedImage, @NonNull LinearLayout main) {
    this.rootView = rootView;
    this.btnDownload = btnDownload;
    this.btnGenerate = btnGenerate;
    this.btnSelectImage = btnSelectImage;
    this.cvQrCode = cvQrCode;
    this.etInputText = etInputText;
    this.ivQrCode = ivQrCode;
    this.ivSelectedImage = ivSelectedImage;
    this.main = main;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityQrgenerativeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityQrgenerativeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_qrgenerative, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityQrgenerativeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDownload;
      Button btnDownload = ViewBindings.findChildViewById(rootView, id);
      if (btnDownload == null) {
        break missingId;
      }

      id = R.id.btnGenerate;
      Button btnGenerate = ViewBindings.findChildViewById(rootView, id);
      if (btnGenerate == null) {
        break missingId;
      }

      id = R.id.btnSelectImage;
      Button btnSelectImage = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectImage == null) {
        break missingId;
      }

      id = R.id.cvQrCode;
      CardView cvQrCode = ViewBindings.findChildViewById(rootView, id);
      if (cvQrCode == null) {
        break missingId;
      }

      id = R.id.etInputText;
      TextInputEditText etInputText = ViewBindings.findChildViewById(rootView, id);
      if (etInputText == null) {
        break missingId;
      }

      id = R.id.ivQrCode;
      ImageView ivQrCode = ViewBindings.findChildViewById(rootView, id);
      if (ivQrCode == null) {
        break missingId;
      }

      id = R.id.ivSelectedImage;
      ImageView ivSelectedImage = ViewBindings.findChildViewById(rootView, id);
      if (ivSelectedImage == null) {
        break missingId;
      }

      LinearLayout main = (LinearLayout) rootView;

      return new ActivityQrgenerativeBinding((LinearLayout) rootView, btnDownload, btnGenerate,
          btnSelectImage, cvQrCode, etInputText, ivQrCode, ivSelectedImage, main);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
